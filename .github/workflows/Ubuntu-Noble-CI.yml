# The MIT License (MIT)
#
# Copyright © 2023-2025 Stephen G. Tuggy
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

name: Ubuntu-Noble-CI

# Controls when the action will run.
on:
    push:
    pull_request:
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    build_and_test:
        runs-on: ubuntu-24.04
        continue-on-error: false
        defaults:
            run:
                shell: bash
        strategy:
            fail-fast: false
            matrix:
                COMPILER:
                    - 'gcc'
                    - 'clang'
                OpenGL_GL_PREFERENCE:
                    - 'GLVND'
                ENABLE_PIE:
                    - 'ON'
        steps:
            - name: Check out repository
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  fetch-depth: 2
                  submodules: false

            - name: Build and Test
              env:
                  COMPILER: ${{ matrix.COMPILER }}
                  FLAGS:    '-DOpenGL_GL_PREFERENCE=${{ matrix.OpenGL_GL_PREFERENCE }} -DENABLE_PIE=${{ matrix.ENABLE_PIE }}'
              run: script/docker-entrypoint.sh $FLAGS
