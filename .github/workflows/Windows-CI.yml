name: Windows-CI

# Controls when the action will run.
on:
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_and_test:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          #- windows-2019
          - windows-2022
        cmake-generator:
          #- VS2019Win64
          - VS2022Win64
          #- Ninja
        enable-pie:
          - 0
          - 1
        build-type:
          - Debug
          - Release

    env:
      # Indicates the location of vcpkg
      VCPKG_ROOT: '${{ github.workspace }}/v'
      # Tells vcpkg where binary packages are stored.
      VCPKG_DEFAULT_BINARY_CACHE: '${{ github.workspace }}/vbincache'
      # Let's use GitHub Action cache as storage for the vcpkg Binary Caching feature.
      VCPKG_BINARY_SOURCES: 'x-gha,readwrite'
      VCPKG_DEFAULT_TRIPLET: x64-windows-win10
      VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-win10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Set env vars needed for vcpkg to leverage the GitHub Action cache as a storage
      # for Binary Caching.
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea #v7.0.1
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: 3.11.9

      - name: "Create directory '${{ env.VCPKG_DEFAULT_BINARY_CACHE }}'"
        run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
        shell: bash

      - name: install-cmake
        uses: lukka/get-cmake@5979409e62bdf841487c5fb3c053149de97a86d3 # v3.31.2
        with:
          cmakeVersion: 3.31.2
          ninjaVersion: 1.12.1

      # Restore vcpkg from the GitHub Action cache service. Note that packages are restored by vcpkg's binary caching
      # when it is being run afterward by CMake.
      - name: restore-vcpkg
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          # The first path is the location of vcpkg: it contains the vcpkg executable and data files, as long as the
          # built package archives (aka binary cache) which are located by VCPKG_DEFAULT_BINARY_CACHE env var.
          # The other paths starting with '!' are exclusions: they contain temporary files generated during the build of the installed packages.
          path: |
            ${{ env.VCPKG_ROOT }}
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
            !${{ env.VCPKG_ROOT }}/installed
          # The key is composed in a way that it gets properly invalidated whenever a different version of vcpkg is being used.
          key: |
            ${{ matrix.os }}-${{ hashFiles( './vcpkg.json' )}}

      - name: install-vcpkg
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/Microsoft/vcpkg.git ${{ env.VCPKG_ROOT }}
          ${{ env.VCPKG_ROOT }}\bootstrap-vcpkg.bat -disableMetrics

      - name: run-build-script
        working-directory: ${{ github.workspace }}
        run: .\script\build.ps1 -Generator ${{ matrix.cmake-generator }} -EnablePIE ${{ matrix.enable-pie }} -BuildType ${{ matrix.build-type }}
